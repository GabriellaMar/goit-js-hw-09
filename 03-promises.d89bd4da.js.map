{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAeC,SAASC,cAAc,kBACtCC,EAAcF,SAASC,cAAc,iBACrCE,EAAWH,SAASC,cAAc,mBAGxC,SAASG,EAAcC,EAAUC,EAAOC,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQM,EAAAlB,GAASmB,OAAOC,QAAQ,qBAAqBZ,QAAeC,GAAUD,EAAW,GAAKE,QAE9FG,EAAOK,EAAAlB,GAASmB,OAAOE,QAAQ,oBAAoBb,QAAeC,GAAUD,EAAW,GAAKE,OAAW,GAExGD,EAAM,G,CAXKN,SAASC,cAAc,UA8B/BkB,iBAAiB,SAf3B,SAA4BC,GAC1BA,EAAIC,iBACJ,MAAMf,EAAQgB,OAAOvB,EAAawB,OAC5BhB,EAAOe,OAAOpB,EAAYqB,OAC1BC,EAASF,OAAOnB,EAASoB,OAC/B,IAAK,IAAIE,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CACnC,MAAMpB,EAAWoB,EACjBrB,EAAcC,EAAUC,GAAUmB,EAAI,GAAKlB,GACxCmB,MAAK,KACJC,QAAQC,IAAI,qBAAqBvB,QAAeC,GAAUD,EAAW,GAAKE,MAAU,IACnFsB,OAAM,KACPF,QAAQC,IAAI,oBAAoBvB,QAAeC,GAAUD,EAAW,GAAKE,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst firstDelayEl = document.querySelector('[name=\"delay\"]');\nconst stepDelayEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\nconst submitBtn = document.querySelector('button');\n\nfunction createPromise(position, delay, step) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay + ((position - 1) * step)}ms`));\n      } else {\n        reject(Notiflix.Notify.failure(`Rejected promise ${position} in ${delay + ((position - 1) * step)}ms`));\n      }\n    }, delay);\n  });\n};\n\nfunction onCreatePromiseBtn(evt) {\n  evt.preventDefault();\n  const delay = Number(firstDelayEl.value);\n  const step = Number(stepDelayEl.value);\n  const amount = Number(amountEl.value);\n  for (let i = 1; i <= amount; i += 1) {\n    const position = i;\n    createPromise(position, delay + ((i - 1) * step))\n      .then(() => {\n        console.log(`Fulfilled promise ${position} in ${delay + ((position - 1) * step)}ms`);\n      }).catch(() => {\n        console.log(`Rejected promise ${position} in ${delay + ((position - 1) * step)}ms`);\n      });\n  }\n};\nsubmitBtn.addEventListener('click', onCreatePromiseBtn);"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$firstDelayEl","document","querySelector","$47d4ff9957288465$var$stepDelayEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","step","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","failure","addEventListener","evt","preventDefault","Number","value","amount","i","then","console","log","catch"],"version":3,"file":"03-promises.d89bd4da.js.map"}